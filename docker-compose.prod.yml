name: "photo_content_api"
services:
  nginx:
    image: nginx:latest
    volumes:
      - app_data:/var/www
      - ./_docker/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "8878:8878"
    depends_on:
      - app
    networks:
      - api_network
  app:
    image: alonecat/photo_content_api:latest  #
    environment:
      - APP_KEY=${APP_KEY}
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - APP_URL=${APP_URL}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_DEBUG=${APP_DEBUG}
      - SANCTUM_STATEFUL_DOMAINS=${SANCTUM_STATEFUL_DOMAINS}
      - SESSION_DOMAIN=${SESSION_DOMAIN}
      - FRONTEND_URL=${FRONTEND_URL}
      - CURRENT_BRANCH=${CURRENT_BRANCH}
      - LAST_COMMIT=${LAST_COMMIT}
    volumes:
      - app_data:/var/www
    depends_on:
      db:
        condition: service_healthy
    networks:
      - api_network

  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - api_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}" ]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 30s

networks:
  api_network:
    driver: bridge

volumes:
  app_data:
  mysql_data:
