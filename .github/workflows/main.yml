name: Build and Push Docker Image and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for prod
        run: |
          docker build -f _docker/app/Dockerfile \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max \
            -t alonecat/photo_content_api:latest .
          docker push alonecat/photo_content_api:latest

  deploy:
    runs-on: vps
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to VPS
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_NAME: ${{ secrets.APP_NAME }}
          APP_ENV: ${{ secrets.APP_ENV }}
          APP_URL: ${{ secrets.APP_URL }}
          DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          APP_DEBUG: ${{ secrets.APP_DEBUG }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}
          COMPOSE_PROJECT_NAME: photo_content_api # Используем имя проекта
        run: |
          echo "Starting deployment for project ${COMPOSE_PROJECT_NAME}..."

          # Остановка старых контейнеров и удаление связанных ресурсов
          docker-compose -f docker-compose.prod.yml down --volumes --remove-orphans

          # Запуск обновленных контейнеров
          docker-compose -f docker-compose.prod.yml up -d

          # Ожидание MySQL
          echo "Waiting for MySQL to be ready..."
          until docker-compose exec db mysqladmin ping -h localhost -u root -p${DB_PASSWORD} --silent; do
            echo "Waiting for MySQL..."
            sleep 5
          done
          echo "MySQL is ready!"

          # Выполнение миграций и очистки кешей
          docker-compose exec app php artisan migrate --force
          docker-compose exec app php artisan cache:clear
          docker-compose exec app php artisan config:clear
          docker-compose exec app php artisan route:clear

          echo "Deployment completed successfully!"
