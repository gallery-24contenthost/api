name: Build and Push Docker Image and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image for prod
        run: |
          docker build -f _docker/app/Dockerfile -t alonecat/photo_content_api:latest .
          docker push alonecat/photo_content_api:latest

  deploy:
    runs-on: ["self-hosted", "vps-api"]
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Deploy to vps
        env:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_NAME: ${{ secrets.APP_NAME }}
          APP_ENV: ${{ secrets.APP_ENV }}
          APP_URL: ${{ secrets.APP_URL }}
          DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          APP_DEBUG: ${{ secrets.APP_DEBUG }}
          SANCTUM_STATEFUL_DOMAINS: ${{ secrets.SANCTUM_STATEFUL_DOMAINS }}
          SESSION_DOMAIN: ${{ secrets.SESSION_DOMAIN }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          TRAEFIK_EMAIL: ${{ secrets.TRAEFIK_EMAIL }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}
          COMPOSE_PROJECT_NAME: photo_content_api
        run: |
          echo "APP_KEY=${APP_KEY}"
          echo "APP_NAME=${APP_NAME}"
          echo "APP_ENV=${APP_ENV}"
          echo "APP_URL=${APP_URL}"
          echo "DB_CONNECTION=${DB_CONNECTION}"
          echo "DB_HOST=${DB_HOST}"
          echo "DB_PORT=${DB_PORT}"
          echo "DB_DATABASE=${DB_DATABASE}"
          echo "DB_USERNAME=${DB_USERNAME}"
          echo "DB_PASSWORD=${DB_PASSWORD}"
          echo "APP_DEBUG=${APP_DEBUG}"
          echo "SANCTUM_STATEFUL_DOMAINS=${SANCTUM_STATEFUL_DOMAINS}"
          echo "SESSION_DOMAIN=${SESSION_DOMAIN}"
          echo "FRONTEND_URL=${FRONTEND_URL}"
          echo "TRAEFIK_EMAIL=${TRAEFIK_EMAIL}"
          echo "GITHUB_REF=${GITHUB_REF}"
          echo "GITHUB_SHA=${GITHUB_SHA}"
          echo "COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}"

          echo "Pulling latest Docker image..."
          docker pull alonecat/photo_content_api:latest

          echo "Removing unused Docker images..."
          docker image prune -f

          docker-compose -f docker-compose.prod.yml down --volumes --remove-orphans
          sleep 2

          chmod 600 ./acme.json

          docker-compose -f docker-compose.prod.yml up -d

          echo "Waiting for MySQL to be ready..."
          until docker-compose exec db mysqladmin ping -h localhost -u root -p"${DB_PASSWORD}" --silent; do
            echo "Waiting for MySQL..."
            sleep 2
          done

          echo "MySQL is ready!"
          sleep 10

          docker-compose exec app php artisan migrate --force
          docker-compose exec app php artisan cache:clear
          docker-compose exec app php artisan config:clear
          docker-compose exec app php artisan route:clear

          echo "Deployment completed successfully!!!"
